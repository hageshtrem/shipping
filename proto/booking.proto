syntax = "proto3";

package booking;

option go_package = "booking/pb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service BookingService {
  rpc BookNewCargo(BookNewCargoRequest) returns (BookNewCargoResponse) {}
  rpc RequestPossibleRoutesForCargo(RequestPossibleRoutesForCargoRequest)
      returns (stream Itinerary) {}
  rpc AssignCargoToRoute(AssignCargoToRouteRequest)
      returns (google.protobuf.Empty) {}
  rpc ChangeDestination(ChangeDestinationRequest)
      returns (google.protobuf.Empty) {}
  rpc Locations(google.protobuf.Empty) returns (LocationsResponse) {}
  rpc LoadCargo(LoadCargoRequest) returns (LoadCargoResponse) {}
  rpc Cargos(google.protobuf.Empty) returns (CargosResponse) {}
}

message BookNewCargoRequest {
  string origin = 1;
  string destination = 2;
  google.protobuf.Timestamp deadline = 3;
}

message BookNewCargoResponse { string tracking_id = 1; }

message RequestPossibleRoutesForCargoRequest { string tracking_id = 1; }

message Leg {
  string voyage_number = 1;
  string load_location = 2;
  string unload_location = 3;
  google.protobuf.Timestamp load_time = 4;
  google.protobuf.Timestamp unload_time = 5;
}

message Itinerary { repeated Leg legs = 1; }

message AssignCargoToRouteRequest {
  string tracking_id = 1;
  Itinerary itinerary = 2;
}

message ChangeDestinationRequest {
  string tracking_id = 1;
  string destination = 2;
}

message LocationsResponse {
  message Location {
    string un_locode = 1;
    string name = 2;
  }
  repeated Location locations = 1;
}

message LoadCargoRequest { string tracking_id = 1; }

message Cargo {
  google.protobuf.Timestamp arrival_deadline = 1;
  string destination = 2;
  repeated Leg legs = 3;
  bool misrouted = 4;
  string origin = 5;
  bool routed = 6;
  string tracking_id = 7;
}

message LoadCargoResponse { Cargo cargo = 1; }

message CargosResponse { repeated Cargo cargos = 1; }