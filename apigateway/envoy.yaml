admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener1
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                stat_prefix: grpc_json
                codec_type: AUTO
                access_log:
                  - name: envoy.file_access_log
                    config:
                      path: "/dev/stdout"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      cors:
                        allow_origin_string_match: [prefix: "http://localhost"]
                        allow_methods: "GET, PUT, DELETE, POST, PATCH, OPTIONS"
                        allow_headers: "access-control-allow-origin, authorization, keep-alive, user-agent, cache-control, content-type, content-transfer-encoding, x-accept-content-transfer-encoding, x-accept-response-streaming, x-user-agent, x-grpc-web, referer"
                        expose_headers: "grpc-status, grpc-message, x-envoy-upstream-service-time"
                      routes:
                        - match: { prefix: "/booking" }
                          route:
                            cluster: booking
                            timeout: { seconds: 60 }
                        - match: { prefix: "/tracking" }
                          route:
                            cluster: tracking
                            timeout: { seconds: 60 }
                        - match: { prefix: "/handling" }
                          route:
                            cluster: handling
                            timeout: { seconds: 60 }
                http_filters:
                  - name: envoy.cors
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder
                      proto_descriptor: "/tmp/envoy/descriptor.pb"
                      services:
                        [
                          "booking.BookingService",
                          "tracking.TrackingService",
                          "handling.HandlingService",
                        ]
                      auto_mapping: true
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.filters.http.router

  clusters:
    - name: booking
      connect_timeout: 1.25s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      http2_protocol_options: {}
      hosts:
        - socket_address:
            address: booking
            port_value: ${BOOKING_SVC_PORT}
    - name: tracking
      connect_timeout: 1.25s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      http2_protocol_options: {}
      hosts:
        - socket_address:
            address: tracking
            port_value: ${TRACKING_SVC_PORT}
    - name: handling
      connect_timeout: 1.25s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      http2_protocol_options: {}
      hosts:
        - socket_address:
            address: handling
            port_value: ${HANDLING_SVC_PORT}
